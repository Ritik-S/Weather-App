{"ast":null,"code":"import _slicedToArray from\"D:/react/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";//making an api object\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var api={key:\"8c63dedcd6fcfd5bf2e216eb874e6951\",base:\"https://api.openweathermap.org/data/2.5/\"};function App(){var _useState=useState(\" \"),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],setWeather=_useState4[1];var search=function search(event){//fetch api\nif(event.key===\"Enter\"){fetch(\"\".concat(api.base,\"weather?q=\").concat(query,\"&units=metric&APPID=\").concat(api.key)).then(function(res){return res.json();}).then(function(result){setWeather(result);setQuery(\"\");console.log(result);});//using promises\n}};// event\nvar dateBuilder=function dateBuilder(d){// building date part\nvar months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];var days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var day=days[d.getDay()];var date=d.getDate();var month=months[d.getMonth()];var year=d.getFullYear();return\"\".concat(day,\" \").concat(date,\" \").concat(month,\" \").concat(year);};return/*#__PURE__*/_jsx(\"div\",{className:typeof weather.main!=\"undefined\"?weather.main.temp>16?\"app warm\":\"app\":\"app\",children:/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-box\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"search-bar\",placeholder:\"Search...\",onChange:function onChange(event){return setQuery(event.target.value);},value:query,onKeyPress:search})}),typeof weather.main!=\"undefined\"?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"location-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"location\",children:[weather.name,\",\",weather.sys.country]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date\",children:[dateBuilder(new Date()),\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"temp\",children:[Math.round(weather.main.temp),\"\\xB0c\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"weather\",children:weather.weather[0].main})]})]})}):/*#__PURE__*/_jsx(\"h1\",{children:/*#__PURE__*/_jsx(\"center\",{children:\"\\\"Please Enter Some city!\\\"\"})})]})});}export default App;","map":{"version":3,"sources":["D:/react/weather-app/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","event","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","target","value","name","sys","country","Date","Math","round"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n//making an api object\nconst api = {\n  key: \"8c63dedcd6fcfd5bf2e216eb874e6951\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [query, setQuery] = useState(\" \");\n  const [weather, setWeather] = useState({});\n\n  const search = (event) => {\n    //fetch api\n    if (event.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n          console.log(result);\n        }); //using promises\n    }\n  }; // event\n  const dateBuilder = (d) => {\n    // building date part\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.main.temp > 16\n            ? \"app warm\"\n            : \"app\"\n          : \"app\"\n      }\n    >\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={(event) => setQuery(event.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {typeof weather.main != \"undefined\" ? (\n          <>\n            <div>\n              <div className=\"location-box\">\n                <div className=\"location\">\n                  {weather.name},{weather.sys.country}\n                </div>\n                <div className=\"date\">{dateBuilder(new Date())} </div>\n              </div>\n              <div className=\"weather-box\">\n                <div className=\"temp\">{Math.round(weather.main.temp)}Â°c</div>\n                <div className=\"weather\">{weather.weather[0].main}</div>\n              </div>\n            </div>\n          </>\n        ) : (\n          <h1>\n            <center>\"Please Enter Some city!\"</center>\n          </h1>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}